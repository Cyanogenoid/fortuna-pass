#ifndef CRYPTO_H
#define CRYPTO_H


#include "avr-crypto-lib/bigint/bigint.h"
#include "avr-crypto-lib/rsa/rsa_basic.h"
#include "avr-crypto-lib/aes/aes.h"


#define AES_KEY "NN"
#define PRIVATE_KEY_LENGTH_BIT 1024ULL
#define PRIVATE_KEY_LENGTH_BYTE PRIVATE_KEY_LENGTH_BIT/8
#define PUBLIC_KEY "\xf5\xac\x36\xb5\x61\x4e\xfa\x23\x04\xe2\x13\x84\x7e\x10\x6d\x0a\x3e\xa4\xec\x36\xfa\x85\x7a\xc9\xa2\xeb\xdd\x6d\x9e\xe3\x61\x50\xc7\xcc\xb6\xb2\xcb\x74\xff\x41\x11\xbd\x72\x28\xce\xd4\x63\x53\x64\xf3\xd8\x07\xc1\x5b\xe1\xfe\x3c\xfe\x07\x47\xc4\xfa\xc1\xe3\x11\xe8\x20\x99\x74\xed\x26\xdd\xb2\xd2\x1c\x5f\xcc\xb0\x20\xeb\x48\x54\x2f\xc9\x61\x89\x06\x0b\xdb\x25\x88\x29\xcd\x0f\x88\x0a\x4a\xe1\xff\x67\x6c\x06\xcc\x2d\xd6\xfe\x1f\x7c\x3e\x40\x2e\x36\xab\x57\x3f\x81\xa2\x14\x0f\x4a\xda\x42\x30\x52\x58\x01\xda\xcc"
#define PRIVATE_KEY "\xa1\x92\x39\x5b\x7f\xbc\x73\x2b\x0c\xfd\x2f\x62\x43\x76\xcc\x88\x8f\xdd\xa2\xf6\x92\xc2\x03\xa3\x70\xe5\x8d\x3a\x96\x6b\xeb\x97\x69\x46\x6e\xe5\xf6\xf9\x61\x2d\xbd\x12\xbf\x28\x88\xae\xfe\xf5\x9e\x6f\xf5\x99\xd9\xea\xcf\x2d\xd2\x94\x5c\xd5\xe5\x67\x5d\xf5\x34\xe1\x6a\x91\x79\x4b\x1b\x82\x88\xc4\x95\xb6\x06\x6b\xc0\x9e\xd8\x75\x31\x16\x12\xf6\x3c\xb6\xad\xdf\x3a\x4d\x75\xd6\xb7\x2a\x7c\xd8\xb5\x7b\x60\x3c\x3f\x35\x67\xe5\x53\xb5\x5e\xc8\x78\x8c\x7a\xda\x6a\x35\x66\x38\xe1\x8b\x21\xad\x76\xeb\x9f\xbc\x60\x19"

char eep_priv_key[PRIVATE_KEY_LENGTH_BYTE];
char eep_publ_key[PRIVATE_KEY_LENGTH_BYTE];
bigint_t exponent;

/*
Load private key from EEPROM and decrypt it.
key: pointer to string used for AES decryption
*/
void load_private_key(char* key);

/*
Decrypt buffer with private key.
buffer: Pointer to buffer to be decrypted
length_B: length of the buffer in bytes
*/
void* decrypt(void* buffer, size_t length_B);


#endif /* CRYPTO_H */
